class Solution {
public:
    string minWindow(string s, string t) {
        int s_len = s.length();
        int t_len = t.length();
        if (s_len == 0 || t_len == 0) {
            return "";
        }
        int s_map[256] = {0};
        int t_map[256] = {0};
        for (int i = 0; i < t_len; i++) {
            t_map[t[i]]++;
        }
        int count = 0;
        int min_len = INT_MAX;
        int min_start = 0;
        for (int start = 0, end = 0; end < s_len; end++) {
            if (t_map[s[end]] == 0) {
                continue;
            }
            s_map[s[end]]++;
            if (s_map[s[end]] <= t_map[s[end]]) {
                count++;
            }
            if (count == t_len) {
                while (t_map[s[start]] == 0 || s_map[s[start]] > t_map[s[start]]) {
                    if (s_map[s[start]] > t_map[s[start]]) {
                        s_map[s[start]]--;
                    }
                    start++;
                }
                int len = end - start + 1;
                if (min_len > len) {
                    min_len = len;
                    min_start = start;
                }
            }
        }
        if (min_len == INT_MAX) {
            return "";
        }
        return s.substr(min_start, min_len);
    }
};
